#!/usr/bin/env ruby
#
# This script implements some simplicity tools for base translation support in Apple XCode. Currently
# the script supports the following features:
#
# * Generate a pseudo translation in a defined target language
#

require 'optparse'
require __FILE__ + '/../../lib/recursive_file_visitor'
require __FILE__ + '/../../lib/translation_manager_pseudo'
require __FILE__ + '/../../lib/translation_manager_update'

# Handle command line parameters
options = {}
optparser = OptionParser.new do |opts|
  opts.banner = "Usage: xt-tool [options]"

  opts.on('-p', '--pseudo TARGETLANGUAGE', 'Creates a pseudo translation in target langauge') { |v| options[:action] = :pseudo; options[:target] = v }
  opts.on('-m', '--missing TARGETLANGUAGE', 'Updates the strings of the target language by the missing strings from the base language') { |v| options[:action] = :update_missing; options[:target] = v }
end
optparser.parse!

# generate the target language indicator
targetLanguage = options[:target].downcase

# perform the correct action
case options[:action]

  when :pseudo
    # start the translation
    translationManager = TranslationManagerPseudo.new()
    translationManager.perform(targetLanguage);
  when :update_missing
    # start the update
    updateManager = TranslationManagerUpdate.new()
    updateManager.perform(targetLanguage);
  else
    p "Not a valid action"
    p options
end